# Ruff configuration: https://docs.astral.sh/ruff/configuration/
# This configuration is designed to enforce modern Python best practices.

# Exclude common directories and generated files from linting and formatting.
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".git-rewrite", ".hg", ".ipynb_checkpoints",
    ".mypy_cache", ".nox", ".pants.d", ".pyenv", ".pytest_cache", ".pytype",
    ".ruff_cache", ".svn", ".tox", ".venv", ".vscode", "__pypackages__",
    "_build", "buck-out", "build", "dist", "node_modules", "site-packages", "venv",
    # Backup and archive directories
    "**/backup/**", "**/archive/**", "**/scratch/**",
    # Project directories with generated or non-lintable content
    "notebooks/**",
    "outputs/**",
    "**/*_backup.py", "**/*_old.py", "**/*.deprecated",
]
force-exclude = true
respect-gitignore = true

# Cache directory for ruff in scratch folder.
cache-dir = "scratch/cache/ruff"

# Define the source directories.
src = ["src", "tests"]

# Project settings
line-length = 119
indent-width = 4
target-version = "py312"

# Lint configuration migrated to new schema
[lint]
select = ["E","F","W","I","UP","B","C4","PIE","RSE","RUF","S","PT","PL","FA","PERF","SIM"]
ignore = [
    "PLR0913","PLR0912","PLR0915","PLR0911","C901","PLR2004",
    "S101","S301","S311","S603","S607",
    "TID252","N812","N999","PLC0415",
    "E501","RUF015","B006",
    "PLW2901","B007",
    "RUF001","RUF002","RUF003",
    # Temporary ignores for legacy or external code patterns
    "F821","F822","B018","S110","S104","S307","S310","S602","DTZ005","N816","D106","PLW0127","F706","F811","RUF022",
]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
extend-unsafe-fixes = ["ALL"]

[lint.pydocstyle]
convention = "google"

[lint.mccabe]
max-complexity = 15

[lint.per-file-ignores]
"tests/*" = [
    "S101",    # assert statements are fine in tests
    "PLR2004", # magic values are fine in tests
    "PLC0415", # imports in functions are fine in tests
    "PLR0915", # too many statements are fine in tests
    "PLR0912", # too many branches are fine in tests
    "PLR0913", # too many arguments are fine in tests
    "F401",    # unused imports are fine in tests
    "F841",    # unused variables are fine in tests
    "B018",    # useless expressions are fine in tests
    "E402",    # imports after pytest.importorskip are fine
]

"scripts/*" = ["S101", "PLR2004"]
"docs/tutorials/**/*.py" = ["S101", "PLR2004", "F401", "F841"]

"*/__init__.py" = ["F401", "F403", "E402", "I002"]
"noxfile.py" = ["W291", "W293"]

# Legacy modules (not in the new fragment pipeline); allow minor style issues
"src/study/data.py" = ["PT018", "W293"]
"src/study/download.py" = ["W293"]
"src/study/models.py" = ["UP008", "W293"]
"src/study/trainer.py" = ["W293"]
"train_full.py" = ["UP008"]
"test_real_data.py" = ["UP008"]

# External/third-party code - ignore most rules
"src/study/external/**" = ["ALL"]

# Temporary files and backups
"**/backup/**" = ["ALL"]
"**/archive/**" = ["ALL"]
"**/scratch/**" = ["ALL"]
"nbfnet-update/**" = ["ALL"]
"**/*_backup.py" = ["ALL"]
"**/*_old.py" = ["ALL"]

[format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
